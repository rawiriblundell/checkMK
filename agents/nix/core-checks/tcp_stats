# shellcheck shell=ksh
# vim: noai:ts=4:sw=4:expandtab

# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# Helper function, we'll keep it tucked away here for now
filter_netstats() {
    awk ' /^tcp/ { c[$6]++; } END { for (x in c) { print x, c[x]; } }'
}
mkecho '<<<tcp_conn_stats>>>'
case "${MK_OSSTR}" in
    (aix|mac)   _netstat_opts="-ntfinet" ;;
    (freebsd)   _netstat_opts="-na" ;;
    (hpux)      _netstat_opts="-f inet -n" ;;
    (linux)
        if inpath waitmax; then
            _tcp_stats=$(waitmax 5 cat /proc/net/tcp /proc/net/tcp6 2>/dev/null | awk ' /:/ { c[$4]++; } END { for (x in c) { print x, c[x]; } }')
            # We simply ignore this warning until we can come up with a cleaner way to do this
            # shellcheck disable=SC2181
            if [ $? = 0 ]; then
                mkecho "${_tcp_stats}"
            elif inpath ss; then
                ss -ant | 
                    grep -v ^State | 
                    awk ' /:/ { c[$1]++; } END { for (x in c) { print x, c[x]; } }' |
                    sed -e 's/^ESTAB/01/g;s/^SYN-SENT/02/g;s/^SYN-RECV/03/g;s/^FIN-WAIT-1/04/g;s/^FIN-WAIT-2/05/g;s/^TIME-WAIT/06/g;s/^CLOSED/07/g;s/^CLOSE-WAIT/08/g;s/^LAST-ACK/09/g;s/^LISTEN/0A/g;s/^CLOSING/0B/g;'
            else
                _netstat_opts="-na"
            fi
            unset -v _tcp_stats
        else
            _netstat_opts="-na"
        fi
    ;;
    (solaris)
        netstat -n -a -f inet -P tcp |
            tail  +5 |
            nawk '{ c[$7]++; } END { for (x in c) { print x, c[x]; } }'
        return
    ;;
esac
netstat "${_netstat_opts}" | filter_netstats
unset -v _netstat_opts